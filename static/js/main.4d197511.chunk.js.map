{"version":3,"sources":["Views/components/Action.js","Views/components/Form.js","Views/components/Result.js","App.js","reportWebVitals.js","Views/components/Reducer/Temp_Reducer.js","Views/components/Reducer/index.js","index.js"],"names":["check_temp","city","dispatch","temp","replace","console","log","fetch","then","response","json","data","type","payload","cel","current","temp_c","far","temp_f","catch","error","useStyles","makeStyles","theme","root","flexGrow","form","margin","spacing","width","formControl","minWidth","labelfont","fontWeight","color","textAlign","size","minHeight","Form","classes","useState","setCity","history","useHistory","useDispatch","className","Grid","container","direction","alignItems","justify","style","item","xs","md","lg","TextField","id","defaultValue","InputProps","readOnly","FormControl","Select","value","onChange","e","target","MenuItem","Button","variant","onClick","push","Result","useSelector","state","final_data","JSON","parse","name","App","basename","process","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","temp_Reducer","action","stringify","allReducers","combineReducers","TempStore","createStore","applyMiddleware","thunk","unstable_createMuiStrictModeTheme","ReactDOM","render","StrictMode","ThemeProvider","store","document","getElementById"],"mappings":"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","file":"static/js/main.4d197511.chunk.js","sourcesContent":["function check_temp(city) {\r\n    return function(dispatch) {\r\n        let API_key = \"ff9f895b2e884d6680530135202710\"\r\n        let temp = city.replace(/\\s/g, '%20')\r\n        console.log(city)\r\n        let url = \"http://api.weatherapi.com/v1/current.json?key=\" + API_key + \"&q=\" + temp\r\n    \r\n        fetch(url)\r\n            .then(response => response.json())\r\n            .then(data => \r\n                dispatch({\r\n                    type: \"QUOTE_RECEIVED\",\r\n                    payload: {cel: data.current.temp_c, far: data.current.temp_f}\r\n                })\r\n                )\r\n            .catch(error => dispatch({\r\n                type: \"QUOTE_FAILED\",\r\n                payload: \"error\"\r\n            })\r\n            );\r\n    }\r\n  }\r\n\r\nexport default check_temp;","import React, { useState } from 'react';\r\nimport { Grid, TextField, Select, FormControl, MenuItem, Button } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {useDispatch} from 'react-redux';\r\nimport check_temp from './Action';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    form: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n          },\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n      },\r\n    labelfont: {\r\n        fontWeight: 600,\r\n        color: \"red\",\r\n        textAlign: \"left\"\r\n    },\r\n    size: {\r\n        minWidth: '270px', minHeight: '30px'\r\n    }\r\n}))\r\n\r\nfunction Form(){\r\n    const classes = useStyles();\r\n    const [city, setCity] = useState(\"Kuala Lumpur\")\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const API_key = \"ff9f895b2e884d6680530135202710\"\r\n\r\n    const handleChange = (e)=>{\r\n        setCity(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = () =>{\r\n        dispatch(check_temp(city))\r\n        history.push(\"/result\")\r\n    }\r\n\r\n    return (\r\n        <>\r\n    <form className={classes.form}>\r\n        <Grid container\r\n        spacing = {1}\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        justify=\"center\"\r\n        style={{ minHeight: '90vh'}}>\r\n            <Grid item xs = {12} md={12} lg={12}>\r\n            <label className={classes.labelfont}> Your API Key </label> \r\n            <br />\r\n                <TextField\r\n                    id=\"api_key\"\r\n                    defaultValue={API_key}\r\n                    className={classes.size}\r\n                    InputProps={{\r\n                        readOnly: true,\r\n                    }}\r\n                />\r\n            </Grid>\r\n            <Grid item xs = {12} md={12} lg={12}>\r\n            <label className={classes.labelfont}> City Name </label>\r\n            <br />\r\n            <FormControl className={classes.formControl}>\r\n                <Select\r\n                    value={city}\r\n                    onChange={handleChange}\r\n                    // onChange={(e)=>handleChange(e.target.value)}\r\n                    className={classes.size}\r\n                >\r\n                <MenuItem value={\"Kuala Lumpur\"}>Kuala Lumpur</MenuItem>\r\n                <MenuItem value={\"Singapore\"}>Singapore</MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12} md={12} lg={12}>\r\n                <Button variant=\"contained\" color=\"secondary\" \r\n                className={classes.size}\r\n                onClick={handleSubmit}> \r\n                Submit </Button>\r\n            </Grid>\r\n        </Grid>\r\n    </form>\r\n    </>\r\n)\r\n}\r\n\r\nexport default Form;\r\n\r\n","import React from 'react';\r\nimport { Grid, TextField, Button } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {useSelector} from 'react-redux';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    form: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n          },\r\n    },\r\n    labelfont: {\r\n        fontWeight: 600,\r\n        color: \"red\",\r\n    }\r\n}))\r\n\r\nfunction Result(){\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const temp = useSelector(state => state.temp)\r\n    if(temp){\r\n        var final_data = JSON.parse(temp)\r\n    }\r\n    \r\n    const handleBack = (e) =>{\r\n       history.push(\"/\")\r\n    }\r\n\r\n    return (\r\n    <>\r\n    <form className={classes.form}>\r\n        <Grid container\r\n        spacing = {0}\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        justify=\"center\"\r\n        style={{ minHeight: '50vh' }}>\r\n\r\n            <Grid item xs = {12} md={12} lg={12}>\r\n            <label className={classes.labelfont}> Celcius </label>\r\n            <br />\r\n                <TextField\r\n                    name=\"temp_c\"\r\n                    value = {final_data ? final_data.cel : \"\"}\r\n                    InputProps={{\r\n                        readOnly: true,\r\n                    }}\r\n                />\r\n            </Grid>\r\n            <Grid item xs = {12} md={12} lg={12}>\r\n            <label className={classes.labelfont}> Fahrenheit </label>\r\n            <br />\r\n                <TextField\r\n                name=\"temp_f\"\r\n                value = {final_data ? final_data.far : \"\"}\r\n                    InputProps={{\r\n                        readOnly: true,\r\n                    }}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12} md={12} lg={12}>\r\n                <Button variant=\"contained\" color=\"default\" \r\n                style={{minWidth: '150px', minHeight: '30px'}}\r\n                onClick = {handleBack}> \r\n                Back </Button>\r\n            </Grid>\r\n        </Grid>\r\n    </form>\r\n    </>\r\n)\r\n}\r\n\r\nexport default Result;\r\n\r\n","import './App.css';\nimport Form from './Views/components/Form';\nimport Result from './Views/components/Result'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n          <Route path=\"/result\" component={Result} />\n          <Route path=\"/\" component={Form} />\n        </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const temp_Reducer = (state = \"\", action) => {\r\n    switch (action.type) {\r\n        case \"QUOTE_RECEIVED\":\r\n          state = JSON.stringify(action.payload)\r\n          break;\r\n        case \"QUOTE_FAILED\":\r\n          state = action.payload;\r\n        break;\r\n      }\r\n      \r\n      return state;\r\n}\r\n\r\nexport default temp_Reducer;","import temp_Reducer from './Temp_Reducer';\r\nimport {combineReducers} from 'redux'\r\n\r\n\r\nconst allReducers = combineReducers({\r\n    temp: temp_Reducer\r\n})\r\n\r\nexport default allReducers","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {createStore, applyMiddleware} from 'redux';\nimport allReducers from './Views/components/Reducer';\nimport { unstable_createMuiStrictModeTheme } from '@material-ui/core/styles';\nimport {Provider} from 'react-redux';\nimport thunk from \"redux-thunk\"\nimport {ThemeProvider } from '@material-ui/core/styles';\n\nconst TempStore = createStore(allReducers, applyMiddleware(thunk));\nconst theme = unstable_createMuiStrictModeTheme();\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <Provider store={TempStore}>\n      <App />\n      </Provider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}